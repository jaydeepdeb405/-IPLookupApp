<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_333068_iplookup_posts</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Get post data</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
		
	try {
		var r = new sn_ws.RESTMessageV2('x_333068_iplookup.Typicode', 'Get posts');
		r.setStringParameterNoEscape('id', current.id);
		
		//override authentication profile
		//authentication type ='basic'/ 'oauth2'
		//r.setAuthentication(authentication type, profile name);
		
		//set a MID server name if one wants to run the message on MID
		//r.setMIDServer('MY_MID_SERVER');
		
		//if the message is configured to communicate through ECC queue, either
		//by setting a MID server or calling executeAsync, one needs to set skip_sensor
		//to true. Otherwise, one may get an intermittent error that the response body is null
		//r.setEccParameter('skip_sensor', true);
		
		var response = r.execute();
		var responseBody = response.getBody();
		var httpStatus = response.getStatusCode();
		
		if(httpStatus === 200) {
			var responseJson = JSON.parse(responseBody);
			current.title = responseJson.title;
			current.body = responseJson.body;
			current.update();
		}
		else {
			current.title = 'error';
			current.body = 'error';
			current.update();
		}
	}
	catch(ex) {
		var message = ex.message;
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-07-03 15:34:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>559329e74f52b3008c120f5e9310c799</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Get post data</sys_name>
        <sys_overrides/>
        <sys_package display_value="IPLookup" source="x_333068_iplookup">eae2d9ab4f12b3008c120f5e9310c72b</sys_package>
        <sys_policy/>
        <sys_scope display_value="IPLookup">eae2d9ab4f12b3008c120f5e9310c72b</sys_scope>
        <sys_update_name>sys_script_559329e74f52b3008c120f5e9310c799</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-07-03 15:34:40</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=559329e74f52b3008c120f5e9310c799"/>
</record_update>
